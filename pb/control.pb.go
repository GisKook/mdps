// Code generated by protoc-gen-go.
// source: control.proto
// DO NOT EDIT!

/*
Package Report is a generated protocol buffer package.

It is generated from these files:
	control.proto
	manage.proto
	param.proto

It has these top-level messages:
	ControlCommand
	ManageCommand
	Param
*/
package Report

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ControlCommand_CommandType int32

const (
	ControlCommand_CMT_INVALID ControlCommand_CommandType = 0
	// dps->das
	ControlCommand_CMT_REQ_RESTART ControlCommand_CommandType = 3
	// dps->das
	ControlCommand_CMT_REP_RESTART ControlCommand_CommandType = 32771
)

var ControlCommand_CommandType_name = map[int32]string{
	0:     "CMT_INVALID",
	3:     "CMT_REQ_RESTART",
	32771: "CMT_REP_RESTART",
}
var ControlCommand_CommandType_value = map[string]int32{
	"CMT_INVALID":     0,
	"CMT_REQ_RESTART": 3,
	"CMT_REP_RESTART": 32771,
}

func (x ControlCommand_CommandType) String() string {
	return proto.EnumName(ControlCommand_CommandType_name, int32(x))
}
func (ControlCommand_CommandType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

type ControlCommand struct {
	Uuid         string                     `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Tid          uint64                     `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
	SerialNumber uint32                     `protobuf:"varint,3,opt,name=serial_number,json=serialNumber" json:"serial_number,omitempty"`
	Type         ControlCommand_CommandType `protobuf:"varint,4,opt,name=type,enum=Report.ControlCommand_CommandType" json:"type,omitempty"`
	Paras        []*Param                   `protobuf:"bytes,5,rep,name=paras" json:"paras,omitempty"`
}

func (m *ControlCommand) Reset()                    { *m = ControlCommand{} }
func (m *ControlCommand) String() string            { return proto.CompactTextString(m) }
func (*ControlCommand) ProtoMessage()               {}
func (*ControlCommand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ControlCommand) GetParas() []*Param {
	if m != nil {
		return m.Paras
	}
	return nil
}

func init() {
	proto.RegisterType((*ControlCommand)(nil), "Report.ControlCommand")
	proto.RegisterEnum("Report.ControlCommand_CommandType", ControlCommand_CommandType_name, ControlCommand_CommandType_value)
}

func init() { proto.RegisterFile("control.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 237 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xce, 0xcf, 0x2b,
	0x29, 0xca, 0xcf, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x0b, 0x4a, 0x2d, 0xc8, 0x2f,
	0x2a, 0x91, 0xe2, 0x2e, 0x48, 0x2c, 0x4a, 0xcc, 0x85, 0x08, 0x2a, 0xb5, 0x30, 0x71, 0xf1, 0x39,
	0x43, 0x94, 0x39, 0xe7, 0xe7, 0xe6, 0x26, 0xe6, 0xa5, 0x08, 0x09, 0x71, 0xb1, 0x94, 0x96, 0x66,
	0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x42, 0x02, 0x5c, 0xcc, 0x25, 0x40,
	0x21, 0x26, 0xa0, 0x10, 0x4b, 0x10, 0x88, 0x29, 0xa4, 0xcc, 0xc5, 0x5b, 0x9c, 0x5a, 0x94, 0x99,
	0x98, 0x13, 0x9f, 0x57, 0x9a, 0x9b, 0x94, 0x5a, 0x24, 0xc1, 0x0c, 0x94, 0xe3, 0x0d, 0xe2, 0x81,
	0x08, 0xfa, 0x81, 0xc5, 0x84, 0xcc, 0xb8, 0x58, 0x4a, 0x2a, 0x0b, 0x52, 0x25, 0x58, 0x80, 0x72,
	0x7c, 0x46, 0x4a, 0x7a, 0x10, 0x17, 0xe8, 0xa1, 0x5a, 0xa8, 0x07, 0xa5, 0x43, 0x80, 0x2a, 0x83,
	0xc0, 0xea, 0x81, 0x86, 0xb3, 0x82, 0x1c, 0x59, 0x2c, 0xc1, 0xaa, 0xc0, 0xac, 0xc1, 0x6d, 0xc4,
	0x0b, 0xd3, 0x18, 0x00, 0x72, 0x79, 0x10, 0x44, 0x4e, 0xc9, 0x8b, 0x8b, 0x1b, 0x49, 0xa7, 0x10,
	0x3f, 0x90, 0xeb, 0x1b, 0x12, 0xef, 0xe9, 0x17, 0xe6, 0xe8, 0xe3, 0xe9, 0x22, 0xc0, 0x20, 0x24,
	0xcc, 0xc5, 0x0f, 0x12, 0x08, 0x72, 0x0d, 0x04, 0xe2, 0xe0, 0x10, 0xc7, 0xa0, 0x10, 0x01, 0x66,
	0x21, 0x51, 0x98, 0x60, 0x00, 0x5c, 0xb0, 0xb9, 0x81, 0x29, 0x89, 0x0d, 0x1c, 0x1a, 0xc6, 0x80,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xaa, 0x21, 0x39, 0xc7, 0x33, 0x01, 0x00, 0x00,
}
