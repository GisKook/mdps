// Code generated by protoc-gen-go.
// source: control.proto
// DO NOT EDIT!

/*
Package Report is a generated protocol buffer package.

It is generated from these files:
	control.proto
	data.proto
	manage.proto
	param.proto
	plc_status.proto

It has these top-level messages:
	ControlCommand
	Monitor
	Alter
	DataCommand
	ManageCommand
	Param
	PLCStataus
*/
package Report

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ControlCommand_CommandType int32

const (
	ControlCommand_CMT_INVALID                              ControlCommand_CommandType = 0
	ControlCommand_CMT_REQ_RESTART                          ControlCommand_CommandType = 3
	ControlCommand_CMT_REP_RESTART                          ControlCommand_CommandType = 32771
	ControlCommand_CMT_REQ_DATA_DOWNLOAD                    ControlCommand_CommandType = 7
	ControlCommand_CMT_REP_DATA_DOWNLOAD                    ControlCommand_CommandType = 32775
	ControlCommand_CMT_REQ_DATA_QUERY                       ControlCommand_CommandType = 8
	ControlCommand_CMT_REP_DATA_QUERY                       ControlCommand_CommandType = 32776
	ControlCommand_CMT_REQ_BATCH_ADD_MONITOR                ControlCommand_CommandType = 9
	ControlCommand_CMT_REP_BATCH_ADD_MONITOR                ControlCommand_CommandType = 32777
	ControlCommand_CMT_REQ_BATCH_ADD_ALTER                  ControlCommand_CommandType = 10
	ControlCommand_CMT_REP_BATCH_ADD_ALTER                  ControlCommand_CommandType = 32778
	ControlCommand_CMT_REQ_RS232_GET_CONFIG                 ControlCommand_CommandType = 17
	ControlCommand_CMT_REP_RS232_GET_CONFIG                 ControlCommand_CommandType = 32785
	ControlCommand_CMT_REQ_RS232_SET_CONFIG                 ControlCommand_CommandType = 18
	ControlCommand_CMT_REP_RS232_SET_CONFIG                 ControlCommand_CommandType = 32786
	ControlCommand_CMT_REQ_RS485_GET_CONFIG                 ControlCommand_CommandType = 33
	ControlCommand_CMT_REP_RS485_GET_CONFIG                 ControlCommand_CommandType = 32801
	ControlCommand_CMT_REQ_RS485_SET_CONFIG                 ControlCommand_CommandType = 34
	ControlCommand_CMT_REP_RS485_SET_CONFIG                 ControlCommand_CommandType = 32802
	ControlCommand_CMT_REQ_GET_SERVER_ADDR                  ControlCommand_CommandType = 4
	ControlCommand_CMT_REP_GET_SERVER_ADDR                  ControlCommand_CommandType = 32772
	ControlCommand_CMT_REQ_SET_SERVER_ADDR                  ControlCommand_CommandType = 5
	ControlCommand_CMT_REP_SET_SERVER_ADDR                  ControlCommand_CommandType = 32773
	ControlCommand_CMT_REQ_TRANSPARENT_TRANSMISSION         ControlCommand_CommandType = 21
	ControlCommand_CMT_REP_TRANSPARENT_TRANSMISSION         ControlCommand_CommandType = 32789
	ControlCommand_CMT_REQ_RELEASE_TRANSPARENT_TRANSMISSION ControlCommand_CommandType = 22
	ControlCommand_CMT_REP_RELEASE_TRANSPARENT_TRANSMISSION ControlCommand_CommandType = 32790
	ControlCommand_CMT_REQ_QUERY_ROUTER_STATUS              ControlCommand_CommandType = 256
	ControlCommand_CMT_REP_QUERY_ROUTER_STATUS              ControlCommand_CommandType = 33024
)

var ControlCommand_CommandType_name = map[int32]string{
	0:     "CMT_INVALID",
	3:     "CMT_REQ_RESTART",
	32771: "CMT_REP_RESTART",
	7:     "CMT_REQ_DATA_DOWNLOAD",
	32775: "CMT_REP_DATA_DOWNLOAD",
	8:     "CMT_REQ_DATA_QUERY",
	32776: "CMT_REP_DATA_QUERY",
	9:     "CMT_REQ_BATCH_ADD_MONITOR",
	32777: "CMT_REP_BATCH_ADD_MONITOR",
	10:    "CMT_REQ_BATCH_ADD_ALTER",
	32778: "CMT_REP_BATCH_ADD_ALTER",
	17:    "CMT_REQ_RS232_GET_CONFIG",
	32785: "CMT_REP_RS232_GET_CONFIG",
	18:    "CMT_REQ_RS232_SET_CONFIG",
	32786: "CMT_REP_RS232_SET_CONFIG",
	33:    "CMT_REQ_RS485_GET_CONFIG",
	32801: "CMT_REP_RS485_GET_CONFIG",
	34:    "CMT_REQ_RS485_SET_CONFIG",
	32802: "CMT_REP_RS485_SET_CONFIG",
	4:     "CMT_REQ_GET_SERVER_ADDR",
	32772: "CMT_REP_GET_SERVER_ADDR",
	5:     "CMT_REQ_SET_SERVER_ADDR",
	32773: "CMT_REP_SET_SERVER_ADDR",
	21:    "CMT_REQ_TRANSPARENT_TRANSMISSION",
	32789: "CMT_REP_TRANSPARENT_TRANSMISSION",
	22:    "CMT_REQ_RELEASE_TRANSPARENT_TRANSMISSION",
	32790: "CMT_REP_RELEASE_TRANSPARENT_TRANSMISSION",
	256:   "CMT_REQ_QUERY_ROUTER_STATUS",
	33024: "CMT_REP_QUERY_ROUTER_STATUS",
}
var ControlCommand_CommandType_value = map[string]int32{
	"CMT_INVALID":                              0,
	"CMT_REQ_RESTART":                          3,
	"CMT_REP_RESTART":                          32771,
	"CMT_REQ_DATA_DOWNLOAD":                    7,
	"CMT_REP_DATA_DOWNLOAD":                    32775,
	"CMT_REQ_DATA_QUERY":                       8,
	"CMT_REP_DATA_QUERY":                       32776,
	"CMT_REQ_BATCH_ADD_MONITOR":                9,
	"CMT_REP_BATCH_ADD_MONITOR":                32777,
	"CMT_REQ_BATCH_ADD_ALTER":                  10,
	"CMT_REP_BATCH_ADD_ALTER":                  32778,
	"CMT_REQ_RS232_GET_CONFIG":                 17,
	"CMT_REP_RS232_GET_CONFIG":                 32785,
	"CMT_REQ_RS232_SET_CONFIG":                 18,
	"CMT_REP_RS232_SET_CONFIG":                 32786,
	"CMT_REQ_RS485_GET_CONFIG":                 33,
	"CMT_REP_RS485_GET_CONFIG":                 32801,
	"CMT_REQ_RS485_SET_CONFIG":                 34,
	"CMT_REP_RS485_SET_CONFIG":                 32802,
	"CMT_REQ_GET_SERVER_ADDR":                  4,
	"CMT_REP_GET_SERVER_ADDR":                  32772,
	"CMT_REQ_SET_SERVER_ADDR":                  5,
	"CMT_REP_SET_SERVER_ADDR":                  32773,
	"CMT_REQ_TRANSPARENT_TRANSMISSION":         21,
	"CMT_REP_TRANSPARENT_TRANSMISSION":         32789,
	"CMT_REQ_RELEASE_TRANSPARENT_TRANSMISSION": 22,
	"CMT_REP_RELEASE_TRANSPARENT_TRANSMISSION": 32790,
	"CMT_REQ_QUERY_ROUTER_STATUS":              256,
	"CMT_REP_QUERY_ROUTER_STATUS":              33024,
}

func (x ControlCommand_CommandType) String() string {
	return proto.EnumName(ControlCommand_CommandType_name, int32(x))
}
func (ControlCommand_CommandType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 0}
}

type ControlCommand struct {
	Uuid         string                     `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Tid          uint64                     `protobuf:"varint,2,opt,name=tid" json:"tid,omitempty"`
	SerialNumber uint32                     `protobuf:"varint,3,opt,name=serial_number" json:"serial_number,omitempty"`
	Type         ControlCommand_CommandType `protobuf:"varint,4,opt,name=type,enum=Report.ControlCommand_CommandType" json:"type,omitempty"`
	Paras        []*Param                   `protobuf:"bytes,5,rep,name=paras" json:"paras,omitempty"`
}

func (m *ControlCommand) Reset()                    { *m = ControlCommand{} }
func (m *ControlCommand) String() string            { return proto.CompactTextString(m) }
func (*ControlCommand) ProtoMessage()               {}
func (*ControlCommand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ControlCommand) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ControlCommand) GetTid() uint64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *ControlCommand) GetSerialNumber() uint32 {
	if m != nil {
		return m.SerialNumber
	}
	return 0
}

func (m *ControlCommand) GetType() ControlCommand_CommandType {
	if m != nil {
		return m.Type
	}
	return ControlCommand_CMT_INVALID
}

func (m *ControlCommand) GetParas() []*Param {
	if m != nil {
		return m.Paras
	}
	return nil
}

func init() {
	proto.RegisterType((*ControlCommand)(nil), "Report.ControlCommand")
	proto.RegisterEnum("Report.ControlCommand_CommandType", ControlCommand_CommandType_name, ControlCommand_CommandType_value)
}

func init() { proto.RegisterFile("control.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 510 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x94, 0xcd, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0xa9, 0xdb, 0x7d, 0xb9, 0x74, 0x33, 0x2f, 0xea, 0xc8, 0xe8, 0x06, 0x59, 0x85, 0x50,
	0x0e, 0xa8, 0x42, 0x1d, 0x48, 0x5c, 0x4d, 0x63, 0x46, 0xa4, 0x36, 0xf1, 0x6c, 0x77, 0x88, 0x93,
	0xd5, 0xd1, 0x1e, 0x2a, 0xad, 0x4d, 0x95, 0xb5, 0x87, 0xdd, 0x22, 0x3e, 0xc4, 0xc7, 0x6d, 0x48,
	0x70, 0x87, 0x03, 0x7f, 0x27, 0xea, 0x8a, 0xb7, 0x7c, 0x74, 0xe2, 0x94, 0xe8, 0xf9, 0x3d, 0xbf,
	0x37, 0xd6, 0x2b, 0x2b, 0xb8, 0xf2, 0x2e, 0x1c, 0x4f, 0xa3, 0xf0, 0xb4, 0x31, 0x89, 0xc2, 0x69,
	0x08, 0xab, 0x62, 0x30, 0x09, 0xa3, 0xe9, 0xfd, 0xf2, 0xa4, 0x17, 0xf5, 0x46, 0x8b, 0xb0, 0xfe,
	0x67, 0x1d, 0x6f, 0xb6, 0x16, 0xb5, 0x56, 0x38, 0x1a, 0xf5, 0xc6, 0x7d, 0xb8, 0x8d, 0x4b, 0xb3,
	0xd9, 0xb0, 0x6f, 0x15, 0xec, 0x82, 0xb3, 0x01, 0x65, 0x5c, 0x9c, 0x0e, 0xfb, 0x16, 0xb2, 0x0b,
	0x4e, 0x09, 0xaa, 0xb8, 0x72, 0x36, 0x88, 0x86, 0xbd, 0x53, 0x3d, 0x9e, 0x8d, 0x4e, 0x06, 0x91,
	0x55, 0xb4, 0x0b, 0x4e, 0x05, 0x9e, 0xe2, 0xd2, 0xf4, 0x7c, 0x32, 0xb0, 0x4a, 0x76, 0xc1, 0xd9,
	0x6c, 0xd6, 0x1b, 0x8b, 0x0f, 0x35, 0xd2, 0x73, 0x1b, 0xff, 0x9e, 0xea, 0x7c, 0x32, 0x80, 0x5d,
	0xbc, 0x32, 0x3f, 0xc5, 0x99, 0xb5, 0x62, 0x17, 0x9d, 0x72, 0xb3, 0x62, 0x14, 0x3e, 0x3f, 0x5a,
	0xfd, 0x62, 0x0d, 0x97, 0x93, 0xed, 0x2d, 0x5c, 0x6e, 0x75, 0x94, 0xf6, 0xfc, 0x63, 0xda, 0xf6,
	0x5c, 0x72, 0x0b, 0xee, 0xe2, 0xad, 0x79, 0x20, 0xd8, 0x91, 0x16, 0x4c, 0x2a, 0x2a, 0x14, 0x29,
	0x42, 0xd5, 0x84, 0xfc, 0x2a, 0xfc, 0x10, 0x23, 0xd8, 0xc1, 0x55, 0xd3, 0x75, 0xa9, 0xa2, 0xda,
	0x0d, 0xde, 0xf8, 0xed, 0x80, 0xba, 0x64, 0x0d, 0x6a, 0x06, 0xf1, 0x0c, 0xfa, 0x1c, 0x23, 0xd8,
	0xc6, 0x90, 0xf2, 0x8e, 0xba, 0x4c, 0xbc, 0x25, 0xeb, 0x60, 0x99, 0x9c, 0x27, 0xf3, 0x2f, 0x31,
	0x82, 0x3d, 0xbc, 0x63, 0x8c, 0x97, 0x54, 0xb5, 0x5e, 0x6b, 0xea, 0xba, 0xba, 0x13, 0xf8, 0x9e,
	0x0a, 0x04, 0xd9, 0x80, 0x87, 0x06, 0xf3, 0x25, 0xf8, 0x6b, 0x8c, 0xa0, 0x86, 0xef, 0xe5, 0x7d,
	0xda, 0x56, 0x4c, 0x10, 0x0c, 0x7b, 0x06, 0xf2, 0x1c, 0xfc, 0x16, 0x23, 0xd8, 0xc5, 0xd6, 0xd5,
	0x46, 0x64, 0xf3, 0xa0, 0xa9, 0x0f, 0x99, 0xd2, 0xad, 0xc0, 0x7f, 0xe5, 0x1d, 0x92, 0x3b, 0xf0,
	0xc0, 0x50, 0x9e, 0xa7, 0x17, 0xcb, 0x6c, 0x79, 0xcd, 0x21, 0x6f, 0x27, 0xe8, 0xf7, 0xac, 0xfd,
	0xec, 0xc5, 0xf3, 0xe4, 0xf4, 0xfd, 0xb4, 0x9d, 0xa1, 0xbf, 0x96, 0xd9, 0x89, 0xe9, 0xf5, 0xbc,
	0x9d, 0xa0, 0xbf, 0xd3, 0x3b, 0x9b, 0xcf, 0x95, 0x4c, 0x1c, 0x33, 0x31, 0xdf, 0x8d, 0x20, 0xa5,
	0xe4, 0xce, 0xb2, 0xf0, 0x63, 0xda, 0x95, 0x19, 0xbc, 0x92, 0x74, 0xb3, 0xf0, 0x53, 0x8c, 0xe0,
	0x11, 0xb6, 0x8d, 0xab, 0x04, 0xf5, 0x25, 0xa7, 0x82, 0xf9, 0x6a, 0xf1, 0xde, 0xf1, 0xa4, 0xf4,
	0x02, 0x9f, 0x54, 0xe1, 0xb1, 0x69, 0xf1, 0x9b, 0x5b, 0x3f, 0x62, 0x04, 0x4f, 0xb0, 0x73, 0x7d,
	0x9f, 0xdb, 0x8c, 0x4a, 0x76, 0x73, 0x7f, 0x1b, 0x1a, 0xa6, 0xcd, 0xff, 0xdf, 0xfe, 0x19, 0x23,
	0xb0, 0x71, 0xcd, 0x4c, 0xbf, 0xbc, 0xac, 0x5a, 0x04, 0x5d, 0xc5, 0x84, 0x96, 0x8a, 0xaa, 0xae,
	0x24, 0x31, 0x82, 0x7d, 0xd3, 0xe0, 0xcb, 0x1b, 0xef, 0xd1, 0xc9, 0xea, 0xe5, 0xff, 0xe2, 0xe0,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xda, 0xa9, 0x84, 0x55, 0x04, 0x00, 0x00,
}
